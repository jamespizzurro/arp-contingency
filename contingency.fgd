//-------------------------------------------------------------------------
//
// Contingency - CUSTOM HAMMER FGD
//
//-------------------------------------------------------------------------

@include "base.fgd"
@include "hl2mp.fgd"

/////////////////
// WAVE SYSTEM //
/////////////////

@PointClass base(Targetname) iconsprite("editor/scripted_sentence.vmt") = contingency_configuration : 
	"A simple point entity that can be used to define optional map features of Contingency."
[
	PreferredWaveType(choices) : "Preferred Wave Type" : 0 : "Defines the type of wave to force the game to use. If a preference is defined here, it has final say in that any wave type preference the server may have will be disregarded and this one will be used instead." =
	[
		0 : "None (Random)"
		1 : "Headcrabs"
		2 : "Antlions"
		3 : "Zombies"
		4 : "Combine"
	]
	
	// Outputs
	output OnInterimPhaseBegin(void) : "Fired when an interim phase begins (usually corresponds with the ending of a combat phase)."
	output OnCombatPhaseBegin(void) : "Fired when a combat phase begins (usually corresponds with the ending of an interim phase)."
]

//////////
// NPCs //
//////////

@PointClass base(Targetname, Angles, RenderFields, DamageFilter, ResponseContext, Shadow) iconsprite("editor/npc_maker.vmt") = contingency_wave_spawner : 
	"Used to spawn certain types of waves of NPCs during a combat phase."
[
	StartDisabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(Flags) = 
	[
		// Only in npc__maker, npc_template_maker uses flag from template NPC
		64 : "Do Not Drop" : 0
		128 : "Don't Spawn While Visible" : 0
	]

	SpawnFrequency(string) : "Frequency" : "-1" : "How often (in seconds) a new NPC will be spawned. If set to -1, a new NPC will be made when the last NPC dies."
	MaxLiveChildren(integer) : "Max Live NPCs" : -1 : "Maximum number of live children allowed at any one time (new ones will not be made until one dies). If set to -1, no limit is applied."
	NPCSquadname(string) : "Childrens' Squad Name" : "contingency"
	
	rallyPointName(string) : "Rally Point Name" : "" : "(OPTIONAL) Name of the contingency_rallypoint entity that NPCs should move to when they spawn."

	// Outputs
	output OnSpawnNPC(string) : "Fired when an NPC is spawned. The activator is the NPC, and the string is the name of the NPC." 
	output OnAllLiveChildrenDead(void) : "Fired when all spawned children have died. This does not mean the spawned is exhausted, so a new child may be spawned any time after this (unless the maker is disabled)."

	// Inputs
	input Spawn(void) : "Spawns an NPC."
	input Toggle(void) : "Toggles the spawner enabled/disabled state."
	input Enable(void) : "Enables the spawner."
	input Disable(void) : "Disables the spawner."
	input SetMaxLiveChildren(integer) : "Sets the maximum number of NPCs that can be alive at any one time from this spawner."
	input SetSpawnFrequency(float) : "Sets how often (in seconds) a new NPC will be spawned."
]

@PointClass base(Targetname, Angles, RenderFields, DamageFilter, ResponseContext, Shadow) iconsprite("editor/npc_maker.vmt") = contingency_support_wave_spawner : 
	"Used to spawn support NPCs during an interim phase."
[
	StartDisabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(Flags) = 
	[
		// Only in npc__maker, npc_template_maker uses flag from template NPC
		64 : "Do Not Drop" : 0
		128 : "Don't Spawn While Visible" : 0
	]

	SpawnFrequency(string) : "Frequency" : "-1" : "How often (in seconds) a new NPC will be spawned. If set to -1, a new NPC will be made when the last NPC dies."
	MaxLiveChildren(integer) : "Max Live NPCs" : -1 : "Maximum number of live children allowed at any one time (new ones will not be made until one dies). If set to -1, no limit is applied."
	NPCSquadname(string) : "Childrens' Squad Name" : "contingency_support"
	
	rallyPointName(string) : "Rally Point Name" : "" : "(OPTIONAL) Name of a contingency_rallypoint entity that NPCs should move to upon spawning."

	// Outputs
	output OnSpawnNPC(string) : "Fired when an NPC is spawned. The activator is the NPC, and the string is the name of the NPC." 
	output OnAllLiveChildrenDead(void) : "Fired when all spawned children have died. This does not mean the spawned is exhausted, so a new child may be spawned any time after this (unless the maker is disabled)."

	// Inputs
	input Spawn(void) : "Spawns an NPC."
	input Toggle(void) : "Toggles the spawner enabled/disabled state."
	input Enable(void) : "Enables the spawner."
	input Disable(void) : "Disables the spawner."
	input SetMaxLiveChildren(integer) : "Sets the maximum number of NPCs that can be alive at any one time from this spawner."
	input SetSpawnFrequency(float) : "Sets how often (in seconds) a new NPC will be spawned."
]

@NPCClass base(Parentname, BaseNPC) size(-16 -16 -16, 16 16 16) color(255 150 0) = npc_enemyfinder : "EnemyFinder"
[
	squadname(String) : "Squad Name" : "contingency" : "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."

	wakeradius(float) : "Wake Radius" : 99999 : "Auto-wake if player within this distance"
	wakesquad(choices) : "Wake Squad" : 1 : "Wake all of the NPCs squadmates if the NPC is woken" =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(flags) =
	[
		65536 : "Check Visibility" : 1
		131072 : "APC Visibility checks" : 0
		262144 : "Short memory" : 0
		524288  : "Can be an enemy" : 0
	]
	FieldOfView(string) : "FieldOfView" : "-1.0" : "How far to look (1.0 = straight ahead, 0.0 = +/- 90 degrees, -1.0 = all directions)"
	MinSearchDist(integer) : "Min Search Dist" : 0
	MaxSearchDist(integer) : "Max Search Dist" : 99999

	freepass_timetotrigger(float) : "Player pass issue time" : 0 : "Amount of time an enemy is hidden after which a 'free pass' on reaquire is granted"
	freepass_duration(float) : "Player pass duration" : 0 : "After granted 'free pass', the amount of time a target is allowed before reaquire"
	freepass_movetolerance(float) : "Player pass move tolerance" : 120 : "After granted 'free pass', the distance the target is allowed to move before reaquire"
	freepass_refillrate(float) : "Player pass refill rate" : "0.5" : "After free pass begins expiring, how much the time the target gets back for every second they hide again"
	freepass_peektime(float) : "Player pass peek time" : 0 : "How long targets in cover are allowed to peek without penalty"

	StartOn(choices) : "Start On" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input TurnOn(void) : "Turn on: Look for enemies"
	input TurnOff(void) : "Turn off: Stop looking for enemies"

	output OnLostEnemies(void) : "Fires when the enemy finder has no enemies."
	output OnAcquireEnemies(void) : "Fires when the enemy finder acquires enemies."
]

@PointClass base(Targetname) iconsprite("editor/bullseye.vmt") = contingency_rallypoint : 
	"An optional rally point for wave and support wave spawners that can be used to force NPCs to move towards this point entity's origin upon spawning."
[
]
