//-------------------------------------------------------------------------
//
// Contingency - CUSTOM HAMMER FGD
//
//-------------------------------------------------------------------------

@include "base.fgd"
@include "hl2mp.fgd"

/////////////////
// WAVE SYSTEM //
/////////////////

@PointClass base(Targetname) iconsprite("editor/scripted_sentence.vmt") = contingency_configuration : 
	"A simple point entity that can be used to define optional map features of Contingency."
[
	PreferredWaveType(choices) : "Preferred Wave Type" : 0 : "Defines the type of wave to force the game to use. If a preference is defined here, it has final say in that any wave type preference the server may have will be disregarded and this one will be used instead." =
	[
		0 : "None (Random)"
		1 : "Headcrabs"
		2 : "Antlions"
		3 : "Zombies"
		4 : "Combine"
	]
]

//////////
// NPCs //
//////////

@PointClass base(Angles) iconsprite("editor/npc_maker.vmt") = contingency_wave_spawner : 
	"Used to spawn certain types of waves of NPCs during a combat phase."
[
	StartDisabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(Flags) = 
	[
		// Only in npc__maker, npc_template_maker uses flag from template NPC
		64 : "Do Not Drop" : 0
		128 : "Don't Spawn While Visible" : 0
	]

	SpawnFrequency(string) : "Frequency" : "-1" : "How often (in seconds) a new NPC will be spawned. If set to -1, a new NPC will be made when the last NPC dies."
	MaxLiveChildren(integer) : "Max Live NPCs" : -1 : "Maximum number of live children allowed at any one time (new ones will not be made until one dies). If set to -1, no limit is applied."
	NPCSquadname(string) : "Childrens' Squad Name" : "contingency"

	// Outputs
	output OnSpawnNPC(string) : "Fired when an NPC is spawned. The activator is the NPC, and the string is the name of the NPC." 
	output OnAllLiveChildrenDead(void) : "Fired when all spawned children have died. This does not mean the spawned is exhausted, so a new child may be spawned any time after this (unless the maker is disabled)."

	// Inputs
	input Spawn(void) : "Spawns an NPC."
	input Toggle(void) : "Toggles the spawner enabled/disabled state."
	input Enable(void) : "Enables the spawner."
	input Disable(void) : "Disables the spawner."
	input SetMaxLiveChildren(integer) : "Sets the maximum number of NPCs that can be alive at any one time from this spawner."
	input SetSpawnFrequency(float) : "Sets how often (in seconds) a new NPC will be spawned."
]

@PointClass base(Angles) iconsprite("editor/npc_maker.vmt") = contingency_support_wave_spawner : 
	"Used to spawn support NPCs during an interim phase."
[
	StartDisabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(Flags) = 
	[
		// Only in npc__maker, npc_template_maker uses flag from template NPC
		64 : "Do Not Drop" : 0
		128 : "Don't Spawn While Visible" : 0
	]

	SpawnFrequency(string) : "Frequency" : "-1" : "How often (in seconds) a new NPC will be spawned. If set to -1, a new NPC will be made when the last NPC dies."
	MaxLiveChildren(integer) : "Max Live NPCs" : -1 : "Maximum number of live children allowed at any one time (new ones will not be made until one dies). If set to -1, no limit is applied."
	NPCSquadname(string) : "Childrens' Squad Name" : "contingency_support"

	// Outputs
	output OnSpawnNPC(string) : "Fired when an NPC is spawned. The activator is the NPC, and the string is the name of the NPC." 
	output OnAllLiveChildrenDead(void) : "Fired when all spawned children have died. This does not mean the spawned is exhausted, so a new child may be spawned any time after this (unless the maker is disabled)."

	// Inputs
	input Spawn(void) : "Spawns an NPC."
	input Toggle(void) : "Toggles the spawner enabled/disabled state."
	input Enable(void) : "Enables the spawner."
	input Disable(void) : "Disables the spawner."
	input SetMaxLiveChildren(integer) : "Sets the maximum number of NPCs that can be alive at any one time from this spawner."
	input SetSpawnFrequency(float) : "Sets how often (in seconds) a new NPC will be spawned."
]
